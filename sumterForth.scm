(define forth
  (let ((stack '()) (input #f) (words '()))
    (define (def-word!)
      (let ((ctx (read)))
        (cond
          ((eq? ctx 'end) '())
          (#t (cons ctx (def-word!))))))
    (define (word? input words)
      (cond ((eq? words '()) #f)
            ((eq? (caar words) input) #t)
            (#t (word? input (cdr words)))))

    ;;Ugly code, clean someday
    (define (find-word word words)
      (cond ((eq? (caar words) word) (cdar words))
            (#t (find-word word (cdr words)))))
    (define (call-word input)
      (let ((stuff (find-word input words)))
        (eval-stuff stuff)))
    (define (eval-stuff stuff)
      (feval (car stuff))
      (if (pair? (cdr stuff)) (eval-stuff (cdr stuff))))

    (define (feval input)
      (cond
        ((number? input) (set! stack (cons input stack)))
        ((eq? input ':) (set! words (cons (def-word!) words)))
        ((eq? input 'drop) (car stack) (set! stack (cdr stack)))
        ((eq? input 'dup) (set! stack (cons (car stack) stack)))
        ((eq? input '-) (set! stack (cons (- (cadr stack)
                                             (car stack))
                                          (cddr stack)))) 
        ((eq? input '+) (set! stack (cons (+ (car stack)
                                             (cadr stack))
                                          (cddr stack))))
        ((eq? input '.s) (write stack) (newline))
        ((eq? input 'if) (if (eq? (car stack) 0)
                           (begin (set! stack (cdr stack)) (read))
                           (begin (feval (read)) (read))))
        ((word? input words) (call-word input))
        ((eq? input 'exit)) ;;Please clean me!
        ((eq? input 'pause))
        (#t (begin (write "ERROR, UNDEFINED") (newline)))))

    (lambda ()
      (let ((input (read)))
        (feval input)
        (cond ((eq? input 'exit)
               (set! stack '())
               (set! words '())
               (write "Elveda Mahzun Pazartesi!")
               (newline))
              ((eq? input 'pause)
               (write "Paused") (newline))
              (#t (forth)))))))
